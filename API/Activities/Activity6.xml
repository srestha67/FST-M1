<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="99d363f9-2d95-4f08-8e52-21a8e524262f" created="3.46.0" activeEnvironment="Default environment" encryptionMode="Not encrypted" name="Activity6" projectVersion="" updated="3.46.0 2023-05-11T09:29:01Z" resourceRoot="" xmlns:con="http://eviware.com/soapui/config">
    <con:settings/>
    <con:interface xsi:type="con:RestService" id="8925ad39-1a62-40b4-9715-14e0837e05c0" wadlVersion="http://wadl.dev.java.net/2009/02" name="http://ipwhois.app" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <con:settings id="b3d99d59-a14f-4ca1-943a-77215ecc30dc"/>
        <con:definitionCache type="TEXT" rootPart=""/>
        <con:endpoints>
            <con:endpoint>http://ipwhois.app</con:endpoint>
        </con:endpoints>
        <con:resource name="IP" path="/json/{IP}" id="05ac9432-e9cb-4dd4-bdf4-045ab844cc74">
            <con:settings/>
            <con:parameters/>
            <con:method name="IP" id="19105abe-650c-4bb0-a47f-1469ba981655" method="GET">
                <con:settings/>
                <con:parameters>
                    <con:parameter required="true">
                        <con:name>IP</con:name>
                        <con:value>IP</con:value>
                        <con:style>TEMPLATE</con:style>
                        <con:default>IP</con:default>
                        <con:path xsi:nil="true"/>
                        <con:description xsi:nil="true"/>
                    </con:parameter>
                </con:parameters>
                <con:representation type="RESPONSE">
                    <con:mediaType>application/json; charset=utf-8</con:mediaType>
                    <con:status>200</con:status>
                    <con:params/>
                    <con:element xmlns:ns="http://ipwhois.app/json/37.77.181.173">ns:Response</con:element>
                </con:representation>
                <con:request name="Request 1" id="b47029fe-ceb5-491c-a132-b037f05f273b" mediaType="application/json">
                    <con:settings/>
                    <con:endpoint>http://ipwhois.app</con:endpoint>
                    <con:credentials>
                        <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
                        <con:authType>No Authorization</con:authType>
                    </con:credentials>
                    <con:parameters>
                        <con:entry key="IP" value="IP"/>
                    </con:parameters>
                    <con:parameterOrder>
                        <con:entry>IP</con:entry>
                    </con:parameterOrder>
                </con:request>
            </con:method>
        </con:resource>
    </con:interface>
    <con:testSuite id="de010439-ae06-4d4c-9295-f1033615a47e" name="http://ipwhois.app Test Suite">
        <con:settings id="44c55bbd-2bc0-4955-a222-14cfe8bf1b40"/>
        <con:runType>SEQUENTIAL</con:runType>
        <con:testCase id="894c8052-92a0-492d-9e46-fa6f8bfebbde" discardOkResults="false" failOnError="false" failTestCaseOnErrors="true" keepSession="false" name="http://ipwhois.app Test Case 1" searchProperties="true" timeout="0">
            <con:settings/>
            <con:testStep type="datasource" name="Data Source" id="fd5ad4d5-0939-424d-b290-f73875ba16f6">
                <con:settings/>
                <con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:dataSource type="Data Generator">
                        <con:configuration>
                            <generatedDataCount>10</generatedDataCount>
                            <generatorsTotalNumber>1</generatorsTotalNumber>
                            <lastSelectedProperty>0</lastSelectedProperty>
                            <GeneratorType0>COMP</GeneratorType0>
                            <PropertyName0>IP</PropertyName0>
                            <repetitionCountIP>0</repetitionCountIP>
                            <repeatValuesIP>false</repeatValuesIP>
                            <ComputerAddressTypeIP>IPv4</ComputerAddressTypeIP>
                            <escapeSpaceSequence/>
                        </con:configuration>
                    </con:dataSource>
                    <con:shared>false</con:shared>
                    <con:restartShared>false</con:restartShared>
                    <con:property>IP</con:property>
                    <con:completeLastOperation>true</con:completeLastOperation>
                    <con:restartOnRun>true</con:restartOnRun>
                    <con:stopDatasourceExhausted>false</con:stopDatasourceExhausted>
                </con:config>
            </con:testStep>
            <con:testStep type="restrequest" name="Request 1" id="48dbb13e-9ce0-4faf-aadd-7fcec2f451a0">
                <con:settings/>
                <con:config service="http://ipwhois.app" resourcePath="/json/{IP}" methodName="IP" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:restRequest name="Request 1" id="b47029fe-ceb5-491c-a132-b037f05f273b" mediaType="application/json">
                        <con:settings>
                            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
                        </con:settings>
                        <con:endpoint>http://ipwhois.app</con:endpoint>
                        <con:request/>
                        <con:originalUri>http://ipwhois.app/json/37.77.181.173</con:originalUri>
                        <con:assertion type="Valid HTTP Status Codes" id="c2910cd8-3996-4c1c-a60a-dd870f006d92" name="Valid HTTP Status Codes">
                            <con:settings/>
                            <con:configuration>
                                <codes>200</codes>
                            </con:configuration>
                        </con:assertion>
                        <con:credentials>
                            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
                            <con:authType>No Authorization</con:authType>
                        </con:credentials>
                        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
                        <con:parameters>
                            <con:entry key="IP" value="${Data Source#IP}"/>
                        </con:parameters>
                        <con:parameterOrder>
                            <con:entry>IP</con:entry>
                        </con:parameterOrder>
                    </con:restRequest>
                </con:config>
            </con:testStep>
            <con:testStep type="transfer" name="Property Transfer" id="09ab2885-5a20-4783-975d-3487f61be96d">
                <con:settings/>
                <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
                        <con:name>City</con:name>
                        <con:sourceType>Response</con:sourceType>
                        <con:sourceStep>Request 1</con:sourceStep>
                        <con:sourcePath>$['city']</con:sourcePath>
                        <con:targetType>city_name</con:targetType>
                        <con:targetStep>Data Sink</con:targetStep>
                        <con:targetPath/>
                        <con:type>JSONPATH</con:type>
                        <con:upgraded>true</con:upgraded>
                    </con:transfers>
                    <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
                        <con:name>Latitude</con:name>
                        <con:sourceType>Response</con:sourceType>
                        <con:sourceStep>Request 1</con:sourceStep>
                        <con:sourcePath>$['latitude']</con:sourcePath>
                        <con:targetType>latitude</con:targetType>
                        <con:targetStep>Data Sink</con:targetStep>
                        <con:type>JSONPATH</con:type>
                        <con:upgraded>true</con:upgraded>
                    </con:transfers>
                    <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
                        <con:name>Longitude</con:name>
                        <con:sourceType>Response</con:sourceType>
                        <con:sourceStep>Request 1</con:sourceStep>
                        <con:sourcePath>$['longitude']</con:sourcePath>
                        <con:targetType>longitude</con:targetType>
                        <con:targetStep>Data Sink</con:targetStep>
                        <con:type>JSONPATH</con:type>
                        <con:upgraded>true</con:upgraded>
                    </con:transfers>
                </con:config>
            </con:testStep>
            <con:testStep type="datasink" name="Data Sink" id="36c4440e-feda-451b-a665-b1b10b106ca3">
                <con:settings/>
                <con:config xsi:type="con:DataSinkStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                    <con:dataSink type="JDBC">
                        <con:configuration>
                            <driver>com.mysql.jdbc.Driver</driver>
                            <connstr>jdbc:mysql://db4free.net:3306/fstm1db?user=fstm1db&amp;password=PASS_VALUE</connstr>
                            <pass>5kki2ERWxiPqzXG</pass>
                            <Connection>&lt;None></Connection>
                            <query>insert into coordinates(city_name,latitude,longitude) values (?,?,?);</query>
                            <stored-procedure>false</stored-procedure>
                        </con:configuration>
                    </con:dataSink>
                    <con:properties>
                        <con:property>
                            <con:name>city_name</con:name>
                            <con:value>Frankfurt</con:value>
                        </con:property>
                        <con:property>
                            <con:name>latitude</con:name>
                            <con:value>50.1109221</con:value>
                        </con:property>
                        <con:property>
                            <con:name>longitude</con:name>
                            <con:value>8.6821267</con:value>
                        </con:property>
                    </con:properties>
                </con:config>
            </con:testStep>
            <con:testStep type="datasourceloop" name="Data Source Loop" id="15828f9a-d6e8-4e78-9d83-132b004c0ef4">
                <con:settings/>
                <con:config>
                    <dataSourceStep>Data Source</dataSourceStep>
                    <targetStep>Data Sink</targetStep>
                    <discardResults>true</discardResults>
                </con:config>
            </con:testStep>
            <con:properties/>
            <con:reportParameters/>
        </con:testCase>
        <con:properties/>
        <con:reportParameters/>
    </con:testSuite>
    <con:requirements/>
    <con:properties/>
    <con:wssContainer/>
    <con:databaseConnectionContainer/>
    <con:jmsConnectionContainer/>
    <con:oAuth2ProfileContainer/>
    <con:oAuth1ProfileContainer/>
    <con:reporting>
        <con:xmlTemplates/>
        <con:parameters/>
    </con:reporting>
    <con:eventHandlers type="RequestFilter.filterRequest" name="RequestFilter.filterRequest">
        <con:script>// Sample event script to add custom HTTP header to all outgoing REST, SOAP and HTTP(S) calls
            // This code is often used for adding custom authentication to ReadyAPI functional tests

            // If hardcoding the token, uncomment and change line 5
            // token = '4567'

            // If your token is parameterized in Project level custom property, uncomment line 8
            // token = request.parent.testCase.testSuite.project.getProperty('auth_token').getValue()

            // To modify all outgoing calls, remove comments from lines 11 to 16
            // headers = request.requestHeaders
            // if (headers.containsKey('auth_token2') == false) {
            //   headers.put('auth_token2', token)
            //   request.requestHeaders = headers
            // }</con:script>
    </con:eventHandlers>
    <con:eventHandlers type="TestRunListener.afterStep" name="TestRunListener.afterStep">
        <con:script>// Save all test step results into files
            // Change the directory path in line 5 to a location where you want to store details
            // then uncomment lines 5 to 10

            // filePath = 'C:\\tempOutputDirectory\\'
            // fos = new java.io.FileOutputStream(filePath + testStepResult.testStep.label + '.txt', true)
            // pw = new java.io.PrintWriter(fos)
            // testStepResult.writeTo(pw)
            // pw.close()
            // fos.close()</con:script>
    </con:eventHandlers>
    <con:authRepository/>
    <con:tags/>
</con:soapui-project>